@using Microsoft.AspNet.Identity
@using Microsoft.Owin.Security

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "User", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right", novalidate = "novalidate " }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                <a href="#" style="padding-left: 28px;">
                    <div style="overflow : hidden; text-overflow: ellipsis; width: 180px;" title="@User.Identity.GetUserName()">
                        @User.Identity.GetUserName()
                    </div>
                </a>
                @*@Html.ActionLink(User.Identity.GetUserName(), "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })*@
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Wyloguj</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        @*<li>@Html.ActionLink("Zarejestruj", "Register", "User", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>*@
        <li>
            @{
                var loginProvider = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes().Single();
                <a style="padding-left: 28px;" href="javascript:document.getElementById('ExternalLoginForm').submit();">Zaloguj</a>
                using (Html.BeginForm("ExternalLogin", "User", FormMethod.Post, new { id = "ExternalLoginForm" }))
                {
                    @Html.Hidden("provider", @loginProvider.AuthenticationType)
                }
            }
        </li>
    </ul>
                }
